{"version":3,"file":"static/js/805.1e05fbc0.chunk.js","mappings":"qSACA,EAAuB,mBAAvB,EAAiD,mBAAjD,EAA4E,oBAA5E,EAAuG,mB,SC4CvG,EApCa,WACX,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,IAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,gHAEIC,EAAAA,EAAAA,IAAcJ,GAFlB,gBAEXK,EAFW,EAEXA,KACRN,EAAQM,EAAKP,MAHM,iDAKnBQ,EAAAA,EAAAA,GAAa,iDALM,yDAAH,qDAQpBH,GACD,GAAE,CAACH,IAEJ,IAAMO,EAAUT,EAAKU,KAAI,gBAAGR,EAAH,EAAGA,GAAIS,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACvB,gBAAaC,UAAWC,EAAxB,WACE,gBACED,UAAWC,EACXC,IAAKL,EAAY,UAAMM,EAAAA,GAAN,OAAeN,GAAiBO,EACjDC,IAAKP,KAEP,cAAGE,UAAWC,EAAd,SAA4BH,KAC5B,uBAAIC,MAPGX,EADc,IAYzB,OACE,iCACE,eAAIY,UAAWC,EAAf,SAA6BN,KAC7B,SAAC,KAAD,MAGL,C,gHC1CD,EAAuB,0BAAvB,EAA+D,iC,SCIlDQ,EAAS,uCAoBtB,EAlBmB,SAAC,GAAoB,IAAD,IAAjBG,MAAAA,OAAiB,MAAT,GAAS,EAC/BC,GAAWC,EAAAA,EAAAA,MACXb,EAAUW,EAAMV,KAAI,gBAAGR,EAAH,EAAGA,GAAIqB,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,MAAOZ,EAA3B,EAA2BA,KAA3B,OACxB,yBACE,UAAC,KAAD,CAAMa,GAAE,kBAAavB,GAAMwB,MAAO,CAAEC,KAAMN,GAA1C,WACE,gBACEP,UAAWC,EACXC,IAAKO,EAAW,UAAMN,GAAN,OAAeM,GAAgBL,EAC/CC,IAAKK,GAASZ,KAEhB,uBAAIY,GAASZ,QAPRV,EADe,IAa1B,OAAO,eAAIY,UAAWC,EAAf,SAA6BN,GACrC,C,4JCrBKmB,E,QAAiBC,EAAAA,OAAa,CAClCC,QAAS,gCACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,WAIDC,EAAY,WACvB,OAAON,EAAeO,IAAI,qBAC3B,EAEYC,EAAe,SAAAlC,GAC1B,OAAO0B,EAAeO,IAAf,iBAA6BjC,GACrC,EAEYI,EAAgB,SAAAJ,GAC3B,OAAO0B,EAAeO,IAAf,iBAA6BjC,EAA7B,YACR,EAEYmC,EAAiB,SAAAnC,GAC5B,OAAO0B,EAAeO,IAAf,iBAA6BjC,EAA7B,YACR,EAEYoC,EAAyB,SAAAC,GACpC,OAAOX,EAAeO,IAAI,gBAAiB,CACzCJ,OAAQ,CACNQ,MAAAA,IAGL,C,6CCvBD,IANqB,SAAAC,GACnBC,EAAAA,GAAAA,MAAYD,EAAS,CACnBE,SAAUD,EAAAA,GAAAA,SAAAA,WAEb,C","sources":["webpack://goit-react-hw-05-movies/./src/Pages/Cast/cast.module.scss?dd88","Pages/Cast/Cast.jsx","webpack://goit-react-hw-05-movies/./src/components/MoviesList/movies-list.module.scss?e0f1","components/MoviesList/MoviesList.jsx","shared/api/getMoviesAPI.js","shared/services/notification.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"cast_list__kAVNS\",\"item\":\"cast_item__7mRIw\",\"image\":\"cast_image__xF4Hf\",\"name\":\"cast_name__NdHja\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCasts } from 'shared/api/getMoviesAPI';\nimport notification from 'shared/services/notification';\nimport { ToastContainer } from 'react-toastify';\nimport { imgURL } from 'components/MoviesList/MoviesList';\nimport placeholder from '../../images/castPlaceholder.jpg';\nimport styles from './cast.module.scss';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchMovieCast = async () => {\n      try {\n        const { data } = await getMovieCasts(id);\n        setCast(data.cast);\n      } catch (error) {\n        notification('Something went wrong, please try again later.');\n      }\n    };\n    fetchMovieCast();\n  }, [id]);\n\n  const element = cast.map(({ id, profile_path, name, character }) => (\n    <li key={id} className={styles.item}>\n      <img\n        className={styles.image}\n        src={profile_path ? `${imgURL}${profile_path}` : placeholder}\n        alt={name}\n      />\n      <p className={styles.name}>{name}</p>\n      <p>{character}</p>\n    </li>\n  ));\n\n  return (\n    <>\n      <ul className={styles.list}>{element}</ul>\n      <ToastContainer />\n    </>\n  );\n};\n\nexport default Cast;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"movies-list_list__Svv1y\",\"moviePoster\":\"movies-list_moviePoster__RGT2L\"};","import { Link, useLocation } from 'react-router-dom';\nimport {PropTypes} from 'prop-types'\nimport placeholder from '../../images/posterPlaceholder.jpg';\nimport styles from './movies-list.module.scss';\n\nexport const imgURL = 'https://image.tmdb.org/t/p/original/';\n\nconst MoviesList = ({ items = [] }) => {\n  const location = useLocation();\n  const element = items.map(({ id, poster_path, title, name }) => (\n    <li key={id}>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        <img\n          className={styles.moviePoster}\n          src={poster_path ? `${imgURL}${poster_path}` : placeholder}\n          alt={title || name}\n        />\n        <p>{title || name}</p>\n      </Link>\n    </li>\n  ));\n\n  return <ul className={styles.list}>{element}</ul>;\n};\n\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.object,\n  )\n}","import axios from 'axios';\n\nconst moviesInstance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  params: {\n    api_key: '5b615476b020779510a5261655f8ba93',\n    language: 'en-US',\n  },\n});\n\nexport const getMovies = () => {\n  return moviesInstance.get('/trending/all/week');\n};\n\nexport const getMovieById = id => {\n  return moviesInstance.get(`/movie/${id}`);\n};\n\nexport const getMovieCasts = id => {\n  return moviesInstance.get(`/movie/${id}/credits`);\n};\n\nexport const getMovieReview = id => {\n  return moviesInstance.get(`/movie/${id}/reviews`);\n};\n\nexport const getMoviesBySearchQuery = query => {\n  return moviesInstance.get('/search/movie', {\n    params: {\n      query,\n    },\n  });\n};\n","import { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst notification = message => {\n  toast.error(message, {\n    position: toast.POSITION.TOP_RIGHT,\n  });\n};\n\nexport default notification;\n"],"names":["useState","cast","setCast","id","useParams","useEffect","fetchMovieCast","getMovieCasts","data","notification","element","map","profile_path","name","character","className","styles","src","imgURL","placeholder","alt","items","location","useLocation","poster_path","title","to","state","from","moviesInstance","axios","baseURL","params","api_key","language","getMovies","get","getMovieById","getMovieReview","getMoviesBySearchQuery","query","message","toast","position"],"sourceRoot":""}